<idea-plugin>
    <id>${PLUGIN_ID}</id>
    <name>HAnS: Helping Annotate Software</name>
    <vendor email="johmara@student.chalmers.se" url="http://www.johmara.dev">easelab</vendor>

    <description><![CDATA[
    Providing support for editing embedded feature annotations
    ]]></description>

    <!-- please see https://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/plugin_compatibility.html
         on how to target different products -->
    <depends>com.intellij.modules.platform</depends>
    <depends>com.intellij.modules.java</depends>

    <extensions defaultExtensionNs="com.intellij">
        <!-- &begin[HAnS::FeatureModel] -->
        <fileType name="Feature Model File" implementationClass="se.ch.HAnS.featureModel.FeatureModelFileType"
                  fieldName="INSTANCE" language="FeatureModel" extensions="feature-model"/>
        <lang.parserDefinition language="FeatureModel"
                               implementationClass="se.ch.HAnS.featureModel.FeatureModelParserDefinition"/>
        <!-- &end[HAnS::FeatureModel] -->

        <!-- &begin[HAnS::FileAnnotation] -->
        <fileType name="File Annotation File" implementationClass="se.ch.HAnS.fileAnnotation.FileAnnotationFileType"
                  fieldName="INSTANCE" language="FileAnnotation" extensions="feature-to-file"/>
        <lang.parserDefinition language="FileAnnotation"
                                implementationClass="se.ch.HAnS.fileAnnotation.FileAnnotationParserDefinition"/>
        <!-- &end[HAnS::FileAnnotation] -->

        <!-- &begin[HAnS::FolderAnnotation] -->
        <fileType name="Feature To Folder File" implementationClass="se.ch.HAnS.folderAnnotation.FolderAnnotationFileType"
                  fieldName="INSTANCE" language="FolderAnnotation" extensions="feature-to-folder"/>
        <lang.parserDefinition language="FolderAnnotation"
                               implementationClass="se.ch.HAnS.folderAnnotation.FolderAnnotationParserDefinition"/>
        <!-- &end[HAnS::FolderAnnotation] -->

        <!-- &begin[HAnS::CodeAnnotation] -->
        <fileType name="Code Annotation File" implementationClass="se.ch.HAnS.codeAnnotation.CodeAnnotationFileType"
                  fieldName="INSTANCE" language="CodeAnnotations" extensions="code-annotation"/>
        <lang.parserDefinition language="CodeAnnotations"
                               implementationClass="se.ch.HAnS.codeAnnotation.CodeAnnotationParserDefinition"/>
        <!-- &end[HAnS::CodeAnnotation] -->

        <!-- &begin[CodeCompletion] -->
        <completion.contributor language="any"
                                implementationClass="se.ch.HAnS.codeCompletion.FileCompletionContributor"/>
        <!-- &end[CodeCompletion] -->

        <!-- &begin[SyntaxHighlighting] -->
        <!-- &begin[SyntaxHighlighting::FeatureModel] -->
        <lang.syntaxHighlighterFactory language="FeatureModel"
                                       implementationClass="se.ch.HAnS.syntaxHighlighting.featureModel.FeatureModelSyntaxHighlighterFactory"/>
        <annotator language="FeatureModel"
                   implementationClass="se.ch.HAnS.syntaxHighlighting.featureModel.FeatureModelAnnotator"/>
        <!-- &end[SyntaxHighlighting::FeatureModel] -->

        <!-- &begin[SyntaxHighlighting::FolderAnnotation] -->
        <lang.syntaxHighlighterFactory language="FolderAnnotation" implementationClass="se.ch.HAnS.syntaxHighlighting.folderAnnotations.FolderAnnotationSyntaxHighlighterFactory"/>
        <annotator language="FolderAnnotation"
                   implementationClass="se.ch.HAnS.syntaxHighlighting.folderAnnotations.FolderAnnotationAnnotator"/>
        <!-- &end[SyntaxHighlighting::FolderAnnotation] -->

        <!-- &begin[SyntaxHighlighting::FileAnnotation] -->
        <lang.syntaxHighlighterFactory language="FileAnnotation" implementationClass="se.ch.HAnS.syntaxHighlighting.fileAnnotations.FileAnnotationSyntaxHighlighterFactory"/> <!-- &line[SyntaxHighlighting::FileAnnotation]-->
        <annotator language="FileAnnotation"
                   implementationClass="se.ch.HAnS.syntaxHighlighting.fileAnnotations.FileAnnotationAnnotator"/>
        <!-- &end[SyntaxHighlighting::FileAnnotation] -->

        <!-- &begin[SyntaxHighlighting::CodeAnnotation] -->
        <lang.syntaxHighlighterFactory language="CodeAnnotations" implementationClass="se.ch.HAnS.syntaxHighlighting.codeAnnotations.CodeAnnotationsSyntaxHighlighterFactory"/> <!-- &line[SyntaxHighlighting::CodeAnnotation]-->
        <annotator language="CodeAnnotations"
                   implementationClass="se.ch.HAnS.syntaxHighlighting.codeAnnotations.CodeAnnotationAnnotator"/>
        <!-- &end[SyntaxHighlighting::CodeAnnotation] -->

        <additionalTextAttributes scheme="Darcula" file="colorSchemes/HAnSDarcula.xml"/>
        <additionalTextAttributes scheme="Default" file="colorSchemes/HAnSDefault.xml"/>
        <!-- &end[SyntaxHighlighting] -->

        <!-- &begin[Injection] -->
        <multiHostInjector implementation="se.ch.HAnS.codeAnnotation.CodeAnnotationInjector"/>
        <!-- &end[Injection] -->

        <!-- &begin[FeatureView] -->
        <toolWindow id="Feature view" secondary="true" icon="AllIcons.General.Modified" anchor="left"
                    factoryClass="se.ch.HAnS.featureView.FeatureViewFactory"/>
        <!-- &end[FeatureView] -->

        <!-- &begin[Referencing] -->
        <psi.referenceContributor implementation="se.ch.HAnS.referencing.FeatureReferenceContributor"/>
        <lang.findUsagesProvider language="FeatureModel"
                                 implementationClass="se.ch.HAnS.referencing.FeatureFindUsagesProvider"/>
        <useScopeEnlarger implementation="se.ch.HAnS.FeatureAnnotationScopeEnlarger"/>
        <psi.referenceContributor implementation="se.ch.HAnS.referencing.FileReferenceContributor"/>
        <renameInputValidator implementation="se.ch.HAnS.referencing.FeatureNameInputValidator"/>
        <!-- &end[Referencing] -->

        <!-- &begin[FileTemplate] -->
        <fileTemplateGroup implementation="se.ch.HAnS.actions.newFile.EFAFileTemplateManager"/>
        <!-- &end[FileTemplate] -->
        <!-- &begin[LiveTemplate] -->
        <defaultLiveTemplates file="/liveTemplates/EFA.xml"/>
        <liveTemplateContext implementation="se.ch.HAnS.codeCompletion.AnyContext"/>
        <liveTemplateContext implementation="se.ch.HAnS.codeCompletion.CommentContext"/>
        <!-- &end[LiveTemplate] -->
    </extensions>

    <actions>
        <action id="RenameFeature"
                class="se.ch.HAnS.actions.RenameAction"
                text="Rename..."
                description="Rename feature">
            <add-to-group group-id="StructureViewPopupMenu" anchor="first"/>
        </action>
        <action id="AddFeature"
                class="se.ch.HAnS.actions.AddAction"
                text="Add..." description="Add feature"
                icon="AllIcons.General.Add">
            <add-to-group group-id="StructureViewPopupMenu" anchor="after" relative-to-action="RenameFeature"/>
        </action>
        <action id="DeleteFeature"
                class="se.ch.HAnS.actions.DeleteAction"
                text="Delete..."
                description="Delete feature"
                icon="AllIcons.General.Remove">
            <add-to-group group-id="StructureViewPopupMenu" anchor="after" relative-to-action="AddFeature"/>
        </action>

        <!-- &begin[NewFile] -->
        <action id="CreateNewFileAction"
                class="se.ch.HAnS.actions.newFile.CreateNewFileAction" text="New EFA File"
                description="Create new feature mappings">
            <add-to-group group-id="NewGroup" anchor="before" relative-to-action="NewFile"/>
        </action>
        <!-- &end[NewFile] -->
    </actions>
</idea-plugin>